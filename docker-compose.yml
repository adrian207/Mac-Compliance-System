# Mac OS Zero Trust Endpoint Security Platform
# Author: Adrian Johnson <adrian207@gmail.com>

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: zerotrust-db
    environment:
      POSTGRES_DB: zerotrust_security
      POSTGRES_USER: zerotrust_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zerotrust_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zerotrust_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: zerotrust-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zerotrust_network

  # Zero Trust Platform
  platform:
    build: .
    container_name: zerotrust-platform
    depends_on:
      - postgres
      - redis
    environment:
      - ZEROTRUST_DATABASE_HOST=postgres
      - ZEROTRUST_DATABASE_PASSWORD=${DB_PASSWORD:-changeme}
      - ZEROTRUST_REDIS_HOST=redis
      - ZEROTRUST_REDIS_PASSWORD=${REDIS_PASSWORD:-changeme}
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./data:/app/data
      - ./reports:/app/reports
    ports:
      - "8000:8000"
      - "9090:9090"
    restart: unless-stopped
    networks:
      - zerotrust_network

  # API Server
  api:
    build: .
    container_name: zerotrust-api
    command: python api_server.py
    depends_on:
      - postgres
      - redis
    environment:
      - ZEROTRUST_DATABASE_HOST=postgres
      - ZEROTRUST_DATABASE_PASSWORD=${DB_PASSWORD:-changeme}
      - ZEROTRUST_REDIS_HOST=redis
      - ZEROTRUST_REDIS_PASSWORD=${REDIS_PASSWORD:-changeme}
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    ports:
      - "8001:8000"
    restart: unless-stopped
    networks:
      - zerotrust_network

volumes:
  postgres_data:
  redis_data:

networks:
  zerotrust_network:
    driver: bridge

